{"version":3,"sources":["components/Form.jsx","components/Button.jsx","components/Pairwise.jsx","components/Result.jsx","App.js","index.js"],"names":["Form","state","buttonNum","handleChange","e","setState","Number","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","className","htmlFor","this","nameInputId","type","name","onChange","placeholder","defaultValue","disabled","onClick","Component","ToggleButton","toggle","toggleState","leftLabel","rightLabel","id","shortid","generate","checked","alphabet","split","Pairwise","toggleButtons","result","handleSubmitResult","sort","a","b","score","labelToIncr","labelToDecr","forEach","el","label","splicedArr","splice","i","j","push","Result","arr","length","App","ActiveState","FORM","PAIRWISE","RESULT","activeState","handleFormSubmit","handlePairwiseSubmit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAEqBA,E,4MACnBC,MAAQ,CACNC,UAAW,G,EAGbC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,UAAWI,OAAOF,EAAEG,cAAcC,U,EAGpDC,aAAe,SAACL,GACdA,EAAEM,iBACF,EAAKC,MAAMC,SAAS,EAAKX,MAAMC,Y,4CAGjC,WACE,OACE,mCACE,uBAAMW,UAAU,OAAhB,UACE,uBAAOC,QAASC,KAAKC,YAArB,SACE,yBACEH,UAAU,QACVI,KAAK,SACLC,KAAK,UACLV,MAAOO,KAAKd,MAAMiB,KAClBC,SAAUJ,KAAKZ,aACfiB,YAAY,gBACZC,aAAa,UAPf,UASE,wBAAQb,MAAM,UAAUc,UAAQ,EAAhC,oCAGA,wBAAQd,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,oBAGJ,wBAAQK,UAAU,UAAUI,KAAK,SAASM,QAASR,KAAKN,aAAxD,0B,GAvCwBe,a,wBCCbC,E,4MACnBxB,MAAQ,CACNyB,QAAQ,G,EAGVC,YAAc,WACZ,EAAKtB,SAAS,CACZqB,QAAS,EAAKzB,MAAMyB,SAGjB,EAAKzB,MAAMyB,OAGd,EAAKf,MAAMQ,SAAS,EAAKR,MAAMiB,UAAW,EAAKjB,MAAMkB,YAFrD,EAAKlB,MAAMQ,SAAS,EAAKR,MAAMkB,WAAY,EAAKlB,MAAMiB,Y,4CAM1D,WACE,IAAME,EAAKC,IAAQC,WACnB,OACE,uBAAMnB,UAAU,eAAhB,UACE,uBACEI,KAAK,QACLa,GAAE,UAAKf,KAAKJ,MAAMiB,UAAhB,YAA6BE,GAC/BtB,MAAOO,KAAKJ,MAAMiB,UAClBV,KAAK,eACLC,SAAUJ,KAAKY,YACfM,SAAUlB,KAAKd,MAAMyB,SAEvB,uBAAOZ,QAAO,UAAKC,KAAKJ,MAAMiB,UAAhB,YAA6BE,GAA3C,SACGf,KAAKJ,MAAMiB,YAGd,uBACEX,KAAK,QACLa,GAAE,UAAKf,KAAKJ,MAAMkB,WAAhB,YAA8BC,GAChCZ,KAAK,eACLV,MAAOO,KAAKJ,MAAMkB,WAClBV,SAAUJ,KAAKY,YACfM,QAASlB,KAAKd,MAAMyB,SAEtB,uBAAOZ,QAAO,UAAKC,KAAKJ,MAAMkB,WAAhB,YAA8BC,GAA5C,SACGf,KAAKJ,MAAMkB,oB,GA1CoBL,aCEpCU,EAAW,sBAAsBC,MAAM,IAExBC,E,4MACnBC,cAAgB,G,EAChBC,OAAS,G,EAETC,mBAAqB,WACnB,EAAKD,OAAOE,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,MAAQF,EAAEE,SACvC,EAAKhC,MAAMC,SAAS,EAAK0B,S,EAG3BnC,aAAe,SAACyC,EAAaC,GAC3B,EAAKP,OAAOQ,SAAQ,SAACC,GACfA,EAAGC,QAAUJ,EACfG,EAAGJ,QACMI,EAAGC,QAAUH,GACtBE,EAAGJ,Y,4CAKT,WACE,IAAMM,EAAa,YAAIf,GAAUgB,OAAO,EAAGnC,KAAKJ,MAAMT,WACtDa,KAAKsB,cAAgB,GACrBtB,KAAKuB,OAAS,GACd,IAAK,IAAIa,EAAI,EAAGA,EAAIpC,KAAKJ,MAAMT,UAAWiD,IAAK,CAG7C,IAFA,IAAIH,EAAQC,EAAWE,GACnBR,EAAQ,EACHS,EAAID,EAAI,EAAGC,EAAIrC,KAAKJ,MAAMT,UAAWkD,IAC5CrC,KAAKsB,cAAcgB,KACjB,cAAC,EAAD,CAEEzB,UAAWqB,EAAWE,GACtBtB,WAAYoB,EAAWG,GACvBjC,SAAUJ,KAAKZ,cAHV4B,IAAQC,aAMjBW,IAEF5B,KAAKuB,OAAOe,KAAK,CAAEL,QAAOL,UAE5B,OACE,mCACE,sBAAK9B,UAAU,gBAAf,UACGE,KAAKsB,cACN,wBAAQxB,UAAU,MAAMU,QAASR,KAAKwB,mBAAtC,iC,GA3C4Bf,aCsBvB8B,EA1BA,SAAC,GAEd,IAF8B,IAAdhB,EAAa,EAAbA,OACZiB,EAAM,GACDJ,EAAI,EAAGA,EAAIb,EAAOkB,OAAQL,IAAK,CACtC,IAAItC,EAAkB,IAANsC,EAAU,QAAU,GAEpCI,EAAIF,KACF,+BACE,6BAAKf,EAAOa,GAAGH,QACf,oBAAInC,UAAWA,EAAf,SAA2ByB,EAAOa,GAAGR,UAF9BZ,IAAQC,aAOrB,OACE,uBAAOnB,UAAU,UAAjB,SACE,wBAAOA,UAAU,QAAjB,UACE,+BACE,uCACA,0CAED0C,QClBYE,E,4MACnBC,YAAc,CACZC,KAAM,EACNC,SAAU,EACVC,OAAQ,G,EAGV5D,MAAQ,CACN6D,YAAa,EAAKJ,YAAYC,KAC9BzD,UAAW,EACXoC,OAAQ,I,EAGVyB,iBAAmB,SAAC7D,GAClB,EAAKG,SAAS,CACZyD,YAAa,EAAKJ,YAAYE,SAC9B1D,e,EAIJ8D,qBAAuB,SAAC1B,GACtB,EAAKjC,SAAS,CACZyD,YAAa,EAAKJ,YAAYG,OAC9BvB,OAAQA,K,4CAIZ,WACE,OAAIvB,KAAKd,MAAM6D,cAAgB/C,KAAK2C,YAAYC,KACvC,cAAC,EAAD,CAAM/C,SAAUG,KAAKgD,mBAG1BhD,KAAKd,MAAM6D,cAAgB/C,KAAK2C,YAAYE,SAE5C,cAAC,EAAD,CACEhD,SAAUG,KAAKiD,qBACf9D,UAAWa,KAAKd,MAAMC,YAKxBa,KAAKd,MAAM6D,cAAgB/C,KAAK2C,YAAYG,OACvC,cAAC,EAAD,CAAQvB,OAAQvB,KAAKd,MAAMqC,cADpC,M,GAzC6Bd,aCAjCyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4e013470.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Form extends Component {\n  state = {\n    buttonNum: 0,\n  };\n\n  handleChange = (e) => {\n    this.setState({ buttonNum: Number(e.currentTarget.value) });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.buttonNum);\n  };\n\n  render() {\n    return (\n      <>\n        <form className=\"form\">\n          <label htmlFor={this.nameInputId}>\n            <select\n              className=\"input\"\n              type=\"select\"\n              name=\"newItem\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              placeholder=\"Choose number\"\n              defaultValue=\"DEFAULT\"\n            >\n              <option value=\"DEFAULT\" disabled>\n                -- select an option --\n              </option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n            </select>\n          </label>\n          <button className=\"btn-add\" type=\"submit\" onClick={this.handleSubmit}>\n            RUN\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nexport default class ToggleButton extends Component {\n  state = {\n    toggle: false,\n  };\n\n  toggleState = () => {\n    this.setState({\n      toggle: !this.state.toggle,\n    });\n\n    if (!this.state.toggle) {\n      this.props.onChange(this.props.rightLabel, this.props.leftLabel);\n    } else {\n      this.props.onChange(this.props.leftLabel, this.props.rightLabel);\n    }\n  };\n\n  render() {\n    const id = shortid.generate();\n    return (\n      <form className=\"switch-field\">\n        <input\n          type=\"radio\"\n          id={`${this.props.leftLabel}_${id}`}\n          value={this.props.leftLabel}\n          name=\"switchToggle\"\n          onChange={this.toggleState}\n          checked={!this.state.toggle}\n        />\n        <label htmlFor={`${this.props.leftLabel}_${id}`}>\n          {this.props.leftLabel}\n        </label>\n\n        <input\n          type=\"radio\"\n          id={`${this.props.rightLabel}_${id}`}\n          name=\"switchToggle\"\n          value={this.props.rightLabel}\n          onChange={this.toggleState}\n          checked={this.state.toggle}\n        />\n        <label htmlFor={`${this.props.rightLabel}_${id}`}>\n          {this.props.rightLabel}\n        </label>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nimport ToggleButton from \"./Button\";\n\nconst alphabet = \"ABCDEFGHIJKLMNOPRST\".split(\"\");\n\nexport default class Pairwise extends Component {\n  toggleButtons = [];\n  result = [];\n\n  handleSubmitResult = () => {\n    this.result.sort((a, b) => b.score - a.score);\n    this.props.onSubmit(this.result);\n  };\n\n  handleChange = (labelToIncr, labelToDecr) => {\n    this.result.forEach((el) => {\n      if (el.label === labelToIncr) {\n        el.score++;\n      } else if (el.label === labelToDecr) {\n        el.score--;\n      }\n    });\n  };\n\n  render() {\n    const splicedArr = [...alphabet].splice(0, this.props.buttonNum);\n    this.toggleButtons = [];\n    this.result = [];\n    for (let i = 0; i < this.props.buttonNum; i++) {\n      let label = splicedArr[i];\n      let score = 0;\n      for (let j = i + 1; j < this.props.buttonNum; j++) {\n        this.toggleButtons.push(\n          <ToggleButton\n            key={shortid.generate()}\n            leftLabel={splicedArr[i]}\n            rightLabel={splicedArr[j]}\n            onChange={this.handleChange}\n          />\n        );\n        score++;\n      }\n      this.result.push({ label, score });\n    }\n    return (\n      <>\n        <div className=\"btn-container\">\n          {this.toggleButtons}\n          <button className=\"btn\" onClick={this.handleSubmitResult}>\n            Get result\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport shortid from \"shortid\";\n\nconst Result = ({ result }) => {\n  let arr = [];\n  for (let i = 0; i < result.length; i++) {\n    let className = i === 0 ? \"green\" : \"\";\n\n    arr.push(\n      <tr key={shortid.generate()}>\n        <td>{result[i].label}</td>\n        <td className={className}>{result[i].score}</td>\n      </tr>\n    );\n  }\n\n  return (\n    <table className=\"results\">\n      <tbody className=\"score\">\n        <tr>\n          <th>Items</th>\n          <th>Score</th>\n        </tr>\n        {arr}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Result;\n","import React, { Component } from \"react\";\nimport Form from \"./components/Form\";\nimport Pairwise from \"./components/Pairwise\";\nimport Result from \"./components/Result\";\n\nexport default class App extends Component {\n  ActiveState = {\n    FORM: 0,\n    PAIRWISE: 1,\n    RESULT: 2,\n  };\n\n  state = {\n    activeState: this.ActiveState.FORM,\n    buttonNum: 0,\n    result: [],\n  };\n\n  handleFormSubmit = (buttonNum) => {\n    this.setState({\n      activeState: this.ActiveState.PAIRWISE,\n      buttonNum,\n    });\n  };\n\n  handlePairwiseSubmit = (result) => {\n    this.setState({\n      activeState: this.ActiveState.RESULT,\n      result: result,\n    });\n  };\n\n  render() {\n    if (this.state.activeState === this.ActiveState.FORM) {\n      return <Form onSubmit={this.handleFormSubmit} />;\n    }\n\n    if (this.state.activeState === this.ActiveState.PAIRWISE) {\n      return (\n        <Pairwise\n          onSubmit={this.handlePairwiseSubmit}\n          buttonNum={this.state.buttonNum}\n        />\n      );\n    }\n\n    if (this.state.activeState === this.ActiveState.RESULT) {\n      return <Result result={this.state.result} />;\n    }\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}